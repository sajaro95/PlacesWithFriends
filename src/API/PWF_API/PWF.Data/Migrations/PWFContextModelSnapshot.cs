// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PWF.Data.Context;
using System;

namespace PWF.Data.Migrations
{
    [DbContext(typeof(PWFContext))]
    partial class PWFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PWF.Model.Buddy", b =>
                {
                    b.Property<int>("MainUserId");

                    b.Property<int>("BuddyUserId");

                    b.Property<int>("Id");

                    b.HasKey("MainUserId", "BuddyUserId");

                    b.HasIndex("BuddyUserId");

                    b.ToTable("Buddies");
                });

            modelBuilder.Entity("PWF.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("LocationName");

                    b.Property<int>("PostId");

                    b.Property<int>("PostalCode");

                    b.Property<string>("State");

                    b.Property<string>("StreetAddress");

                    b.HasKey("Id");

                    b.HasIndex("PostId")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("PWF.Model.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Message");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("PWF.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PWF.Model.Buddy", b =>
                {
                    b.HasOne("PWF.Model.User", "BuddyUser")
                        .WithMany("Buddies")
                        .HasForeignKey("BuddyUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PWF.Model.User", "MainUser")
                        .WithMany("MainUserBuddies")
                        .HasForeignKey("MainUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PWF.Model.Location", b =>
                {
                    b.HasOne("PWF.Model.Post", "Post")
                        .WithOne("Location")
                        .HasForeignKey("PWF.Model.Location", "PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PWF.Model.Post", b =>
                {
                    b.HasOne("PWF.Model.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
